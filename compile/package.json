{
  "_args": [
    [
      {
        "raw": "compile",
        "scope": null,
        "escapedName": "compile",
        "name": "compile",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\enYx\\Documents\\GitHub"
    ]
  ],
  "_from": "compile@latest",
  "_id": "compile@0.0.2",
  "_inCache": true,
  "_location": "/compile",
  "_npmUser": {
    "name": "sorensen",
    "email": "mail@beausorensen.com"
  },
  "_npmVersion": "1.1.65",
  "_phantomChildren": {},
  "_requested": {
    "raw": "compile",
    "scope": null,
    "escapedName": "compile",
    "name": "compile",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/compile/-/compile-0.0.2.tgz",
  "_shasum": "092624df2285234fcd39e80269344afd4db6f952",
  "_shrinkwrap": null,
  "_spec": "compile",
  "_where": "C:\\Users\\enYx\\Documents\\GitHub",
  "author": {
    "name": "Beau Sorensen",
    "email": "mail@beausorensen.com",
    "url": "http://github.com/sorensen"
  },
  "bugs": {
    "url": "https://github.com/sorensen/compile/issues"
  },
  "dependencies": {},
  "description": "Combine multiple objects into one",
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "092624df2285234fcd39e80269344afd4db6f952",
    "tarball": "https://registry.npmjs.org/compile/-/compile-0.0.2.tgz"
  },
  "engines": {
    "node": "0.x"
  },
  "homepage": "https://github.com/sorensen/compile#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sorensen",
      "email": "mail@beausorensen.com"
    }
  ],
  "name": "compile",
  "optionalDependencies": {},
  "readme": "\nCompiled\n========\n\n[![Build Status](https://secure.travis-ci.org/sorensen/compiled.png)](http://travis-ci.org/sorensen/compiled) \n\nClass / function composition library, combines all static and prototype methods\ninto a single function, constructors are also chained and will be ran in the \norder they are received. A `strict` option can be set for the library which will\nthrow an error if property colision is encountered.\n\nThis library can be used with both node and the browser, file based methods are\nonly available in node, such as `compile.dir`.\n\n\nUsage\n-----\n\nNode.js\n\n``` js\nvar compile = require('compile')\n```\n\nBrowser\n\n``` html\n<script src=\"compile.min.js\"></script>\n```\n\n\nMethods\n-------\n\n### compile(â€¦)\n\nCombines any number of functions passed into a single function\n\n``` js\nfunction Red() { this.bar = 1 }\nfunction Blue() { this.foo = 2 }\n\nvar Purple = compile(Red, Blue)\nvar purp = new Purple()\n\npurp.bar // 1\npurp.foo // 2\n```\n\n### compile.setup(options)\n\nConfigure the library, currently only the `strict` option is used, which will \nthrow an error if a property colision is found.\n\n``` js\ncompile.setup({ strict: true })\n```\n\n### compile.dir(directory, [exclude])\n\nCombines all exports for a given directory into a single function, `directory`\nshould be the absolute path, `exclude` can be an array of filenames or a single\nfile to exclude from the compile. Pathing can be relative or absolute for `exclude`.\n\n``` js\nmodule.exports = compile.dir(__dirname, __filename)\n```\n\n\nInstall\n-------\n\nWith [npm](https://npmjs.org)\n\n```\nnpm install compile\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2011-2012 Beau Sorensen <mail@beausorensen.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/sorensen/compile.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "0.0.2",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.x"
      },
      "pkgid": "compile@0.0.2"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.x"
      },
      "pkgid": "compile@0.0.2"
    }
  ]
}
